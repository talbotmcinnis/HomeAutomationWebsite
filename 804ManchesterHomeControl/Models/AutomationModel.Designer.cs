//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AutomationModel", "FK_RoomActivities_Activities", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_804ManchesterHomeControl.Models.Activity), "RoomActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_804ManchesterHomeControl.Models.RoomActivity), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_DeviceCommands_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_804ManchesterHomeControl.Models.Device), "DeviceCommand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_804ManchesterHomeControl.Models.DeviceCommand), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_RequiredCommands_DeviceCommands", "DeviceCommand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_804ManchesterHomeControl.Models.DeviceCommand), "RequiredCommand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_804ManchesterHomeControl.Models.RequiredCommand), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_RequiredCommands_RoomActivities", "RoomActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_804ManchesterHomeControl.Models.RoomActivity), "RequiredCommand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_804ManchesterHomeControl.Models.RequiredCommand), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_RoomActivities_Rooms", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_804ManchesterHomeControl.Models.Room), "RoomActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_804ManchesterHomeControl.Models.RoomActivity), true)]

#endregion

namespace _804ManchesterHomeControl.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutomationModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutomationModelContainer object using the connection string found in the 'AutomationModelContainer' section of the application configuration file.
        /// </summary>
        public AutomationModelContainer() : base("name=AutomationModelContainer", "AutomationModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutomationModelContainer object.
        /// </summary>
        public AutomationModelContainer(string connectionString) : base(connectionString, "AutomationModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutomationModelContainer object.
        /// </summary>
        public AutomationModelContainer(EntityConnection connection) : base(connection, "AutomationModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceCommand> DeviceCommands
        {
            get
            {
                if ((_DeviceCommands == null))
                {
                    _DeviceCommands = base.CreateObjectSet<DeviceCommand>("DeviceCommands");
                }
                return _DeviceCommands;
            }
        }
        private ObjectSet<DeviceCommand> _DeviceCommands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
        private ObjectSet<Device> _Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequiredCommand> RequiredCommands
        {
            get
            {
                if ((_RequiredCommands == null))
                {
                    _RequiredCommands = base.CreateObjectSet<RequiredCommand>("RequiredCommands");
                }
                return _RequiredCommands;
            }
        }
        private ObjectSet<RequiredCommand> _RequiredCommands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoomActivity> RoomActivities
        {
            get
            {
                if ((_RoomActivities == null))
                {
                    _RoomActivities = base.CreateObjectSet<RoomActivity>("RoomActivities");
                }
                return _RoomActivities;
            }
        }
        private ObjectSet<RoomActivity> _RoomActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceCommands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceCommands(DeviceCommand deviceCommand)
        {
            base.AddObject("DeviceCommands", deviceCommand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevices(Device device)
        {
            base.AddObject("Devices", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequiredCommands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequiredCommands(RequiredCommand requiredCommand)
        {
            base.AddObject("RequiredCommands", requiredCommand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoomActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoomActivities(RoomActivity roomActivity)
        {
            base.AddObject("RoomActivities", roomActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="activity1">Initial value of the Activity1 property.</param>
        public static Activity CreateActivity(global::System.Int32 id, global::System.String activity1)
        {
            Activity activity = new Activity();
            activity.Id = id;
            activity.Activity1 = activity1;
            return activity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Activity1
        {
            get
            {
                return _Activity1;
            }
            set
            {
                OnActivity1Changing(value);
                ReportPropertyChanging("Activity1");
                _Activity1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Activity1");
                OnActivity1Changed();
            }
        }
        private global::System.String _Activity1;
        partial void OnActivity1Changing(global::System.String value);
        partial void OnActivity1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RoomActivities_Activities", "RoomActivity")]
        public EntityCollection<RoomActivity> RoomActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomActivity>("AutomationModel.FK_RoomActivities_Activities", "RoomActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomActivity>("AutomationModel.FK_RoomActivities_Activities", "RoomActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceName">Initial value of the DeviceName property.</param>
        /// <param name="hexMode">Initial value of the HexMode property.</param>
        public static Device CreateDevice(global::System.Int32 id, global::System.String deviceName, global::System.Boolean hexMode)
        {
            Device device = new Device();
            device.Id = id;
            device.DeviceName = deviceName;
            device.HexMode = hexMode;
            return device;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceName
        {
            get
            {
                return _DeviceName;
            }
            set
            {
                OnDeviceNameChanging(value);
                ReportPropertyChanging("DeviceName");
                _DeviceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceName");
                OnDeviceNameChanged();
            }
        }
        private global::System.String _DeviceName;
        partial void OnDeviceNameChanging(global::System.String value);
        partial void OnDeviceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SerialPort
        {
            get
            {
                return _SerialPort;
            }
            set
            {
                OnSerialPortChanging(value);
                ReportPropertyChanging("SerialPort");
                _SerialPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SerialPort");
                OnSerialPortChanged();
            }
        }
        private Nullable<global::System.Int32> _SerialPort;
        partial void OnSerialPortChanging(Nullable<global::System.Int32> value);
        partial void OnSerialPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BaudRate
        {
            get
            {
                return _BaudRate;
            }
            set
            {
                OnBaudRateChanging(value);
                ReportPropertyChanging("BaudRate");
                _BaudRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaudRate");
                OnBaudRateChanged();
            }
        }
        private Nullable<global::System.Int32> _BaudRate;
        partial void OnBaudRateChanging(Nullable<global::System.Int32> value);
        partial void OnBaudRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HexMode
        {
            get
            {
                return _HexMode;
            }
            set
            {
                OnHexModeChanging(value);
                ReportPropertyChanging("HexMode");
                _HexMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HexMode");
                OnHexModeChanged();
            }
        }
        private global::System.Boolean _HexMode;
        partial void OnHexModeChanging(global::System.Boolean value);
        partial void OnHexModeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_DeviceCommands_Devices", "DeviceCommand")]
        public EntityCollection<DeviceCommand> DeviceCommands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceCommand>("AutomationModel.FK_DeviceCommands_Devices", "DeviceCommand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceCommand>("AutomationModel.FK_DeviceCommands_Devices", "DeviceCommand", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="DeviceCommand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceCommand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceCommand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DeviceCommand CreateDeviceCommand(global::System.Int32 id, global::System.Int32 deviceId, global::System.String name)
        {
            DeviceCommand deviceCommand = new DeviceCommand();
            deviceCommand.Id = id;
            deviceCommand.DeviceId = deviceId;
            deviceCommand.Name = name;
            return deviceCommand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IRCode
        {
            get
            {
                return _IRCode;
            }
            set
            {
                OnIRCodeChanging(value);
                ReportPropertyChanging("IRCode");
                _IRCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IRCode");
                OnIRCodeChanged();
            }
        }
        private global::System.String _IRCode;
        partial void OnIRCodeChanging(global::System.String value);
        partial void OnIRCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialCommand
        {
            get
            {
                return _SerialCommand;
            }
            set
            {
                OnSerialCommandChanging(value);
                ReportPropertyChanging("SerialCommand");
                _SerialCommand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialCommand");
                OnSerialCommandChanged();
            }
        }
        private global::System.String _SerialCommand;
        partial void OnSerialCommandChanging(global::System.String value);
        partial void OnSerialCommandChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_DeviceCommands_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("AutomationModel.FK_DeviceCommands_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("AutomationModel.FK_DeviceCommands_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("AutomationModel.FK_DeviceCommands_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("AutomationModel.FK_DeviceCommands_Devices", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RequiredCommands_DeviceCommands", "RequiredCommand")]
        public EntityCollection<RequiredCommand> RequiredCommands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequiredCommand>("AutomationModel.FK_RequiredCommands_DeviceCommands", "RequiredCommand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequiredCommand>("AutomationModel.FK_RequiredCommands_DeviceCommands", "RequiredCommand", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="RequiredCommand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequiredCommand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequiredCommand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roomActivityId">Initial value of the RoomActivityId property.</param>
        /// <param name="deviceCommandId">Initial value of the DeviceCommandId property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        public static RequiredCommand CreateRequiredCommand(global::System.Int32 id, global::System.Int32 roomActivityId, global::System.Int32 deviceCommandId, global::System.Int32 sequence)
        {
            RequiredCommand requiredCommand = new RequiredCommand();
            requiredCommand.Id = id;
            requiredCommand.RoomActivityId = roomActivityId;
            requiredCommand.DeviceCommandId = deviceCommandId;
            requiredCommand.Sequence = sequence;
            return requiredCommand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomActivityId
        {
            get
            {
                return _RoomActivityId;
            }
            set
            {
                OnRoomActivityIdChanging(value);
                ReportPropertyChanging("RoomActivityId");
                _RoomActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomActivityId");
                OnRoomActivityIdChanged();
            }
        }
        private global::System.Int32 _RoomActivityId;
        partial void OnRoomActivityIdChanging(global::System.Int32 value);
        partial void OnRoomActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceCommandId
        {
            get
            {
                return _DeviceCommandId;
            }
            set
            {
                OnDeviceCommandIdChanging(value);
                ReportPropertyChanging("DeviceCommandId");
                _DeviceCommandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceCommandId");
                OnDeviceCommandIdChanged();
            }
        }
        private global::System.Int32 _DeviceCommandId;
        partial void OnDeviceCommandIdChanging(global::System.Int32 value);
        partial void OnDeviceCommandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RequiredCommands_DeviceCommands", "DeviceCommand")]
        public DeviceCommand DeviceCommand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceCommand>("AutomationModel.FK_RequiredCommands_DeviceCommands", "DeviceCommand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceCommand>("AutomationModel.FK_RequiredCommands_DeviceCommands", "DeviceCommand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeviceCommand> DeviceCommandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceCommand>("AutomationModel.FK_RequiredCommands_DeviceCommands", "DeviceCommand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeviceCommand>("AutomationModel.FK_RequiredCommands_DeviceCommands", "DeviceCommand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RequiredCommands_RoomActivities", "RoomActivity")]
        public RoomActivity RoomActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomActivity>("AutomationModel.FK_RequiredCommands_RoomActivities", "RoomActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomActivity>("AutomationModel.FK_RequiredCommands_RoomActivities", "RoomActivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomActivity> RoomActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomActivity>("AutomationModel.FK_RequiredCommands_RoomActivities", "RoomActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomActivity>("AutomationModel.FK_RequiredCommands_RoomActivities", "RoomActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roomName">Initial value of the RoomName property.</param>
        public static Room CreateRoom(global::System.Int32 id, global::System.String roomName)
        {
            Room room = new Room();
            room.Id = id;
            room.RoomName = roomName;
            return room;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoomName
        {
            get
            {
                return _RoomName;
            }
            set
            {
                OnRoomNameChanging(value);
                ReportPropertyChanging("RoomName");
                _RoomName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoomName");
                OnRoomNameChanged();
            }
        }
        private global::System.String _RoomName;
        partial void OnRoomNameChanging(global::System.String value);
        partial void OnRoomNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RoomActivities_Rooms", "RoomActivity")]
        public EntityCollection<RoomActivity> RoomActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomActivity>("AutomationModel.FK_RoomActivities_Rooms", "RoomActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomActivity>("AutomationModel.FK_RoomActivities_Rooms", "RoomActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="RoomActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoomActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoomActivity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roomId">Initial value of the RoomId property.</param>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        public static RoomActivity CreateRoomActivity(global::System.Int32 id, global::System.Int32 roomId, global::System.Int32 activityId)
        {
            RoomActivity roomActivity = new RoomActivity();
            roomActivity.Id = id;
            roomActivity.RoomId = roomId;
            roomActivity.ActivityId = activityId;
            return roomActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomId
        {
            get
            {
                return _RoomId;
            }
            set
            {
                OnRoomIdChanging(value);
                ReportPropertyChanging("RoomId");
                _RoomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomId");
                OnRoomIdChanged();
            }
        }
        private global::System.Int32 _RoomId;
        partial void OnRoomIdChanging(global::System.Int32 value);
        partial void OnRoomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                OnActivityIdChanging(value);
                ReportPropertyChanging("ActivityId");
                _ActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityId");
                OnActivityIdChanged();
            }
        }
        private global::System.Int32 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int32 value);
        partial void OnActivityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RoomActivities_Activities", "Activity")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("AutomationModel.FK_RoomActivities_Activities", "Activity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("AutomationModel.FK_RoomActivities_Activities", "Activity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("AutomationModel.FK_RoomActivities_Activities", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("AutomationModel.FK_RoomActivities_Activities", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RequiredCommands_RoomActivities", "RequiredCommand")]
        public EntityCollection<RequiredCommand> RequiredCommands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequiredCommand>("AutomationModel.FK_RequiredCommands_RoomActivities", "RequiredCommand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequiredCommand>("AutomationModel.FK_RequiredCommands_RoomActivities", "RequiredCommand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_RoomActivities_Rooms", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("AutomationModel.FK_RoomActivities_Rooms", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("AutomationModel.FK_RoomActivities_Rooms", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("AutomationModel.FK_RoomActivities_Rooms", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("AutomationModel.FK_RoomActivities_Rooms", "Room", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
